apiVersion: v1
kind: Namespace
metadata:
  name: dice-services
---
# Déploiement du service de nombres aléatoires
apiVersion: apps/v1
kind: Deployment
metadata:
  name: random-service
  namespace: dice-services
spec:
  replicas: 2
  selector:
    matchLabels:
      app: random-service
  template:
    metadata:
      labels:
        app: random-service
    spec:
      containers:
      - name: random-service
        image: trisdh/random:1
        ports:
        - containerPort: 5000
        resources:
          requests:
            memory: "64Mi"
            cpu: "100m"
          limits:
            memory: "128Mi"
            cpu: "200m"
        readinessProbe:
          httpGet:
            path: /random
            port: 5000
          initialDelaySeconds: 5
          periodSeconds: 10
---
# Service pour exposer le déploiement de nombres aléatoires
apiVersion: v1
kind: Service
metadata:
  name: random-service
  namespace: dice-services
spec:
  selector:
    app: random-service
  ports:
  - port: 80
    targetPort: 5000
  type: ClusterIP
---
# Déploiement du service de somme
apiVersion: apps/v1
kind: Deployment
metadata:
  name: sum-service
  namespace: dice-services
spec:
  replicas: 2
  selector:
    matchLabels:
      app: sum-service
  template:
    metadata:
      labels:
        app: sum-service
    spec:
      containers:
      - name: sum-service
        image: trisdh/sum:1
        ports:
        - containerPort: 5001
        resources:
          requests:
            memory: "64Mi"
            cpu: "100m"
          limits:
            memory: "128Mi"
            cpu: "200m"
        readinessProbe:
          httpGet:
            path: /sum
            port: 5001
          initialDelaySeconds: 10
          periodSeconds: 15
---
# Service pour exposer le déploiement de somme
apiVersion: v1
kind: Service
metadata:
  name: sum-service
  namespace: dice-services
spec:
  selector:
    app: sum-service
  ports:
  - port: 80
    targetPort: 5001
  type: ClusterIP
---
# Configuration Ingress pour l'accès externe
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: dice-services-ingress
  namespace: dice-services
  annotations:
    kubernetes.io/ingress.class: "nginx"
    nginx.ingress.kubernetes.io/rewrite-target: /$1
spec:
  rules:
  - host: dice-services.example.com
    http:
      paths:
      - path: /random(/|$)(.*)
        pathType: Prefix
        backend:
          service:
            name: random-service
            port:
              number: 80
      - path: /sum(/|$)(.*)
        pathType: Prefix
        backend:
          service:
            name: sum-service
            port:
              number: 80
---
# HorizontalPodAutoscaler pour le service de nombres aléatoires
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: random-service-hpa
  namespace: dice-services
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: random-service
  minReplicas: 2
  maxReplicas: 5
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 70
---
# HorizontalPodAutoscaler pour le service de somme
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: sum-service-hpa
  namespace: dice-services
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: sum-service
  minReplicas: 2
  maxReplicas: 5
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 70